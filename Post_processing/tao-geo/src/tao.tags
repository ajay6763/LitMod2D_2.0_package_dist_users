AREA_TRIANGLE	../lib/libreria.c	/^#define AREA_TRIANGLE(area, a, b, c)	{\/*Heron's f/
AT_BORDER	../include/types_n_defs.h	/^#define AT_BORDER(i,j)		((i==0) || (i==Ny-1) || (j/
AT_BORDER_1D	../include/types_n_defs.h	/^#define AT_BORDER_1D(i)		((i==0) || (i==Nx-1))$/
Add_Node_To_Lake	taosp.c	/^int Add_Node_To_Lake (int ncell, int i_lake)$/
Add_Saddle_To_Lake	taosp.c	/^int Add_Saddle_To_Lake (int sd, int tr, int i_lake/
Allocate_Memory	taolib.c	/^int Allocate_Memory()$/
Allocate_Memory_for_external_use	call_taosp.c	/^int Allocate_Memory_for_external_use()$/
Attempt_Delete_Node_From_Lake	taosp.c	/^int Attempt_Delete_Node_From_Lake (int ncell)$/
BLOCK	../include/types_n_defs.h	/^struct BLOCK { 		\/*for TISC*\/$/
BLOCK_1D	../include/types_n_defs.h	/^struct BLOCK_1D {	\/*for tAo*\/$/
BOOL	../include/types_n_defs.h	/^typedef enum BOOLEAN	{NO, YES} BOOL;$/
BORDER_INDEX	../include/types_n_defs.h	/^#define BORDER_INDEX(i,j)	(((j)==0)? 3 : ((j)==Nx-/
BORDER_LIMIT	../include/types_n_defs.h	/^#define BORDER_LIMIT(i,j)	DOMAIN_LIMIT(i,j)$/
CS2D	../include/types_n_defs.h	/^struct CS2D {$/
Calculate_Discharge	taosp.c	/^int Calculate_Discharge (int *sortcell)$/
Calculate_Precipitation_Evaporation	taosp.c	/^int Calculate_Precipitation_Evaporation ()$/
DOMAIN_LIMIT	../include/types_n_defs.h	/^#define DOMAIN_LIMIT(i,j)	{if (i<0) i=0;  if (i>=N/
DOMAIN_LIMIT_1D	../include/types_n_defs.h	/^#define DOMAIN_LIMIT_1D(i)	{if (i<0) i=0;  if (i>N/
DRAINAGE	../include/types_n_defs.h	/^struct DRAINAGE {$/
DRAINAGE_1D	../include/types_n_defs.h	/^struct DRAINAGE_1D {$/
Deallocate_Lake	taosp.c	/^int Deallocate_Lake (int i_lake)$/
Define_Drainage_Net	taosp.c	/^int Define_Drainage_Net (int *sortcell) $/
Define_Lake	taosp.c	/^int Define_Lake (int i_lake)$/
Delete_Block	taolib.c	/^int Delete_Block(int i_Block)$/
Delete_Node_From_Lake	taosp.c	/^int Delete_Node_From_Lake (int ln)$/
Diffusive_Eros_1D	taosp.c	/^int Diffusive_Eros_1D (float *topo, float Kerosdif/
Direct_mode	tao.c	/^int Direct_mode(char *load_file_name)$/
Divide_Lake	taosp.c	/^int Divide_Lake (int ind) $/
ET2RIG	../include/geomodel.h	/^#define	ET2RIG(x)	(E*pow(x,3.)\/(12*(1.-nu*nu)))		/
Elastoplastic_Deflection	tao.c	/^int Elastoplastic_Deflection()$/
Erode	taosp.c	/^int Erode (double d_mass, int ind) $/
Fluvial_Transport	taosp.c	/^int Fluvial_Transport (float *topo, float dt, floa/
GET_KREST	../include/tao.h	/^#define GET_KREST(Krest, q, i) { \/*Define the res/
GRIDNODE	../include/types_n_defs.h	/^struct GRIDNODE {$/
IF_LAKE_IS_SEA	../include/types_n_defs.h	/^#define IF_LAKE_IS_SEA(il) 	if (il) if (Lake[il].n/
INSIDE_BORDER	../include/types_n_defs.h	/^#define INSIDE_BORDER(i,j)  	IN_DOMAIN(i,j)$/
IN_DOMAIN	../include/types_n_defs.h	/^#define IN_DOMAIN(i,j)		((i>=0) && (i<Ny)    && (j/
IN_DOMAIN_1D	../include/types_n_defs.h	/^#define IN_DOMAIN_1D(i)		((i>=0) && (i<Nx))$/
Init_Stress	taolib.c	/^int Init_Stress()$/
LAKE_INFO	../include/types_n_defs.h	/^struct LAKE_INFO {		\/*For lakes*\/$/
LAKE_INFO_1D	../include/types_n_defs.h	/^struct LAKE_INFO_1D {		\/*For lakes*\/$/
LES_matrix	taolib.c	/^int LES_matrix (double **A,	\/* Matrix of the line/
LIMIT	../include/types_n_defs.h	/^#define LIMIT(x,y,z)	(((x)<(y))? (y) : ((x)>(z))? /
LININTERP	../include/types_n_defs.h	/^#define LININTERP(x, x1,x2, y1,y2)	((x<=x1)? y1 : /
Lake_Fill	taosp.c	/^int Lake_Fill ($/
Lake_Input_Discharge	taosp.c	/^float Lake_Input_Discharge (int ilake) $/
Lake_Node_Number	taosp.c	/^int Lake_Node_Number(int ind)$/
Lake_Saddle_Number	taosp.c	/^int Lake_Saddle_Number (int ind)$/
Landslide_Transport	taosp.c	/^int Landslide_Transport (float critical_slope, flo/
MASS2SEDTHICK_1D	taosp.c	/^#define MASS2SEDTHICK_1D(mass)	((mass) \/(denssedi/
MAX_2	../include/types_n_defs.h	/^#define MAX_2(x,y)	(((x)>(y))? (x) : (y))	\/*Gives/
MIN_2	../include/types_n_defs.h	/^#define MIN_2(x,y)	(((x)<(y))? (x) : (y))	\/*Gives/
Match_Param_Replace_chr	../include/tao+tisc.h	/^#define Match_Param_Replace_chr(x, y, old)  if (!s/
Match_Param_Replace_flt	../include/tao+tisc.h	/^#define Match_Param_Replace_flt(x, y, old)  if (!s/
Match_Param_Replace_int	../include/tao+tisc.h	/^#define Match_Param_Replace_int(x, y, old)  if (!s/
Match_Param_char	../lib/libreria.c	/^#define Match_Param_char(x, y) if (!strcasecmp(str/
Match_Param_char_old	../include/tao+tisc.h	/^#define Match_Param_char_old(x, y) if (!strcasecmp/
Match_Param_flt	../lib/libreria.c	/^#define Match_Param_flt(x, y)  if (!strcasecmp(str/
Match_Param_flt_old	../include/tao+tisc.h	/^#define Match_Param_flt_old(x, y)  if (!strcasecmp/
Match_Param_int	../lib/libreria.c	/^#define Match_Param_int(x, y)  if (!strcasecmp(str/
Match_Param_int_old	../include/tao+tisc.h	/^#define Match_Param_int_old(x, y)  if (!strcasecmp/
Minvertfile	invertfile.c	/^int main (int argc, char **argv)$/
Mtao	tao.c	/^int main(int argc, char **argv)$/
Mtaofit	taofit.c	/^int main(int argc, char **argv)$/
NEIGHBOURS	../include/types_n_defs.h	/^#define NEIGHBOURS(i,j,ni,nj)	(fabs(i-ni) <= 1 && /
NOT_AT_BORDER	../include/types_n_defs.h	/^#define NOT_AT_BORDER(i,j)	((i>0)  && (i<Ny-1)  &&/
NOT_AT_BORDER_1D	../include/types_n_defs.h	/^#define NOT_AT_BORDER_1D(i)	((i>0)  && (i<Nx-1))$/
NOT_OUT_BORDER	../include/types_n_defs.h	/^#define NOT_OUT_BORDER(i,j)  	IN_DOMAIN(i,j)$/
New_Lake	taosp.c	/^int New_Lake ()$/
OUT_BORDER	../include/types_n_defs.h	/^#define OUT_BORDER(i,j) 	OUT_DOMAIN(i,j)$/
OUT_DOMAIN	../include/types_n_defs.h	/^#define OUT_DOMAIN(i,j) 	((i<0)  || (i>=Ny)   || (/
OUT_DOMAIN_1D	../include/types_n_defs.h	/^#define OUT_DOMAIN_1D(i)	((i<0)  || (i>=Nx))$/
Orographic_Precipitation	taosp.c	/^float Orographic_Precipitation (int i, float windv/
Orographic_Precipitation_Evaporation_conservative	taosp.c	/^int Orographic_Precipitation_Evaporation_conservat/
PRINT_ARRAY_INFO	../include/tao.h	/^#define PRINT_ARRAY_INFO(array, name, units, units/
PRINT_DEBUG	../include/types_n_defs.h	/^#define PRINT_DEBUG(...)	{if (verbose_level>=4) {f/
PRINT_DEBUGPLUS	../include/types_n_defs.h	/^#define PRINT_DEBUGPLUS(...){if (verbose_level>=5)/
PRINT_ERROR	../include/types_n_defs.h	/^#define PRINT_ERROR(...)	{if (verbose_level>=0) {f/
PRINT_GRID_INFO	../include/types_n_defs.h	/^#define PRINT_GRID_INFO(grid, name, units) {\\$/
PRINT_INFO	../include/types_n_defs.h	/^#define PRINT_INFO(...) 	{if (verbose_level>=2) {f/
PRINT_SUMLINE	../include/types_n_defs.h	/^#define PRINT_SUMLINE(...)	{if (verbose_level>=1) /
PRINT_WARNING	../include/types_n_defs.h	/^#define PRINT_WARNING(...)	{if (verbose_level>=3) /
RIG2ET	../include/geomodel.h	/^#define	RIG2ET(x)	(pow((x)\/E*12.*(1.-nu*nu), 1.\//
ReSort_Array	../lib/libreria.c	/^float ReSort_Array (float *array, int *orden, int /
Read_Header_File	../include/tao+tisc.h	/^#define Read_Header_File(file) {\\$/
Read_Open_Filename_Return	../include/tao+tisc.h	/^#define Read_Open_Filename_Return(ext,type,txt) {/
Read_Param	../include/tao.h	/^#define Read_Param(x, y)  {char line[MAXLENLINE+20/
Repare_Blocks	taolib.c	/^int Repare_Blocks()$/
Rheo_Flex_Iter	taolib.c	/^int Rheo_Flex_Iter () {$/
SIGN	../include/types_n_defs.h	/^#define SIGN(x)		(((x)<0)? (-1) : (((x)>0)? (+1) :/
SQUARE	../include/types_n_defs.h	/^#define SQUARE(x)	((x)*(x))$/
Sediment	taosp.c	/^int Sediment (double d_mass, int ind) $/
SolveAlmostDiagonalTriangularEquationSystem	../lib/libreria.c	/^int SolveAlmostDiagonalTriangularEquationSystem ($/
Surface_Transport	taosp.c	/^int Surface_Transport (float *topo, float dt, floa/
TAKE_LINE_1	../include/types_n_defs.h	/^#define TAKE_LINE_1(x)		{ char auxstr[MAXLENLINE],/
TAKE_LINE_2	../include/types_n_defs.h	/^#define TAKE_LINE_2(x, y)	{ char auxstr[MAXLENLINE/
TAKE_LINE_3	../include/types_n_defs.h	/^#define TAKE_LINE_3(x, y, z)	{ char auxstr[MAXLENL/
TAKE_LINE_4	../include/types_n_defs.h	/^#define TAKE_LINE_4(x, y, z, t)	{ char auxstr[MAXL/
TEMPERATURE	../include/types_n_defs.h	/^#define TEMPERATURE(altitude)	(temp_sea_level - GA/
TEMPERATURE_AIR	../include/types_n_defs.h	/^#define TEMPERATURE_AIR(topo,height)	(TEMPERATURE_/
TEMPERATURE_GROUND	../include/types_n_defs.h	/^#define TEMPERATURE_GROUND(topo)	(temp_sea_level -/
TEMPERATURE_ICE	../include/types_n_defs.h	/^#define TEMPERATURE_ICE(altitude)	(temp_sea_level /
THICK2SEDMASS_1D	taosp.c	/^#define THICK2SEDMASS_1D(thick)	((thick)*(denssedi/
The_End	tao.c	/^int The_End()$/
TriangularizeAlmostDiagonalEquationSystem	../lib/libreria.c	/^int TriangularizeAlmostDiagonalEquationSystem($/
Unify_Lakes	taosp.c	/^int Unify_Lakes (int i_lake, int i_lake_to_delete)/
VERTANOMCONTRIB	../lib/libreria.c	/^#define VERTANOMCONTRIB(s,x,y,z) {\\$/
Viscous_Relaxation	tao.c	/^int Viscous_Relaxation()$/
WriteAlmostDiagonalMatrix	../lib/libreria.c	/^int WriteAlmostDiagonalMatrix (double **A, double /
Write_Open_Filename_Return	../include/tao+tisc.h	/^#define Write_Open_Filename_Return(ext,type,retcon/
Write_Ouput	tao.c	/^int Write_Ouput()$/
alloc_array	../lib/libreria.c	/^float *alloc_array (int n)$/
alloc_array_dbl	../lib/libreria.c	/^double *alloc_array_dbl (int n)$/
alloc_matrix	../lib/libreria.c	/^float **alloc_matrix (int n_fil, int n_col)$/
alloc_matrix_dbl	../lib/libreria.c	/^double **alloc_matrix_dbl (int n_fil, int n_col)$/
alloc_matrix_int	../lib/libreria.c	/^int **alloc_matrix_int (int n_fil, int n_col)$/
anombloq	../lib/libreria.c	/^float anombloq(register float x1, register float x/
calculate_sea_level	taolib.c	/^float calculate_sea_level()$/
calculate_topo	taolib.c	/^float calculate_topo(float *topo_new)$/
calculate_water_load	taolib.c	/^int calculate_water_load()$/
call_surf_proc_	call_taosp.c	/^int call_surf_proc_ ($/
compaction	../lib/libreria.c	/^float compaction(float phi0, float comp_depth, flo/
constant_rate_eros	taosp.c	/^int constant_rate_eros ($/
diffusion_2D	../lib/libreria.c	/^int diffusion_2D(float **Matrix, float **d_Matrix,/
distVincenty	../lib/libreria.c	/^float distVincenty(float lat1, float lon1, float l/
dist_2D	../lib/libreria.c	/^float dist_2D($/
dist_xy_line	../lib/libreria.c	/^float dist_xy_line($/
dist_xy_pol	../lib/libreria.c	/^float dist_xy_pol($/
dist_xy_segment	../lib/libreria.c	/^float dist_xy_segment($/
evaluate_xy_points	../lib/libreria.c	/^float evaluate_xy_points($/
flexural_stats	tao.c	/^int flexural_stats (float *moment) {$/
free_matrix	../lib/libreria.c	/^int free_matrix (float **matrix, int n_fil)$/
free_matrix_dbl	../lib/libreria.c	/^int free_matrix_dbl (double **matrix, int n_fil)$/
free_matrix_int	../lib/libreria.c	/^int free_matrix_int (int **matrix, int n_fil)$/
geoidanompolyg	../lib/libreria.c	/^float geoidanompolyg($/
gradual_Block	taolib.c	/^int gradual_Block()$/
gravanompolyg	../lib/libreria.c	/^float gravanompolyg($/
gravity_anomaly	tao.c	/^int gravity_anomaly()$/
init_surf_proc_	call_taosp.c	/^int init_surf_proc_ ($/
inputs	tao.c	/^int inputs(int argc, char **argv)$/
insert_new_Block	taolib.c	/^int insert_new_Block(int num_new_Block)$/
interpol2D	../lib/libreria.c	/^int interpol2D ($/
interpol_in_xy_data	../lib/libreria.c	/^float interpol_in_xy_data ($/
interpol_point_in_mesh	../lib/libreria.c	/^float interpol_point_in_mesh ($/
interpr_command_line_opts	tao.c	/^int interpr_command_line_opts(int argc, char **arg/
make_gravi_body	taolib.c	/^int make_gravi_body(float *upper_hor, float *lower/
match_parameter	taolib.c	/^int match_parameter(char *str1, char *str2, int sh/
moment_calculator	taolib.c	/^float moment_calculator (float 	d2wdx2, $/
moment_calculator_hist	taolib.c	/^float moment_calculator_hist ($/
move_Blocks	tao.c	/^int move_Blocks()$/
outin	../lib/libreria.c	/^int outin($/
polygon_area	../lib/libreria.c	/^float polygon_area($/
prism_vert_grav	../lib/libreria.c	/^double prism_vert_grav ($/
project_xy_line	../lib/libreria.c	/^float project_xy_line($/
project_xy_segment	../lib/libreria.c	/^float project_xy_segment($/
read_file_Crust_Thick	taoio.c	/^int read_file_Crust_Thick(float crust_thick_defaul/
read_file_Te	taoio.c	/^int read_file_Te()$/
read_file_Temperature	taoio.c	/^int read_file_Temperature()$/
read_file_Upper_Crust_Thick	taoio.c	/^int read_file_Upper_Crust_Thick(float crust_thick_/
read_file_YSE	taolib.c	/^int read_file_YSE()$/
read_file_horiz_record_time	taoio.c	/^int read_file_horiz_record_time()$/
read_file_initial_deflection	taoio.c	/^int read_file_initial_deflection(float *w)$/
read_file_initial_topo	taoio.c	/^int read_file_initial_topo(float *h)$/
read_file_parameters	taoio.c	/^int read_file_parameters (int show, int reformat) /
read_file_resume	taoio.c	/^int read_file_resume(char *filename)$/
read_file_sea_level	taoio.c	/^int read_file_sea_level()$/
read_file_unit	tao.c	/^int read_file_unit()$/
readinterp2D	../lib/libreria.c	/^int readinterp2D ($/
readinterplin	../lib/libreria.c	/^int readinterplin ($/
replace_word	../lib/libreria.c	/^char *replace_word(char *s, char *old, char *new)$/
sistecslintriang	../lib/libreria.c	/^void sistecslintriang(float **a, float *b, int nx,/
solveLES	taolib.c	/^int solveLES (double **A, double *b, int Nx, int n/
surface_processes	tao.c	/^int surface_processes()$/
surface_topo	../lib/libreria.c	/^double surface_topo($/
syntax	tao.c	/^int syntax()$/
tectload	tao.c	/^int tectload()$/
triangularizar	../lib/libreria.c	/^int triangularizar(float **a, float *b, int nx)$/
write_file_Blocks	taoio.c	/^int write_file_Blocks()$/
write_file_Te	taoio.c	/^int write_file_Te () $/
write_file_Temperature	taoio.c	/^int write_file_Temperature ()$/
write_file_Temperature_initial	taoio.c	/^int write_file_Temperature_initial ()$/
write_file_erosed	taoio.c	/^int write_file_erosed (float *total_erosion)$/
write_file_grav_anom	taoio.c	/^int write_file_grav_anom (float *gravanom, float */
write_file_maxmompoint	taoio.c	/^int write_file_maxmompoint ()$/
write_file_resume	taoio.c	/^int write_file_resume()$/
write_file_stress	taoio.c	/^int write_file_stress ()$/
write_file_time	taoio.c	/^int write_file_time (float *w, float *topo)$/
yield_stress_envelope	taolib.c	/^int yield_stress_envelope ($/
yield_stress_envelope_semibrittle	taolib.c	/^int yield_stress_envelope_semibrittle ($/
